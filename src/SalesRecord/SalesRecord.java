/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SalesRecord;

import Forms.ConnectionToDatabase;
import Forms.MainPanel;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Black Code
 */
import java.sql.*;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

public class SalesRecord extends JFrame {
Connection conn = null;
PreparedStatement pst = null;
ResultSet rs = null;
String tableClicked = "";

    public SalesRecord() {
        initComponents();
        conn = ConnectionToDatabase.connectToDb();
        setIconImage(new ImageIcon(getClass().getResource("icon.png")).getImage());        
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        updateTable();
    }
        public void close(){
        WindowEvent we = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(we);
    }

    private void updateTable(){
        try{
        String sql = "SELECT  * FROM sales_record";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();

        DefaultTableModel tableModel = new DefaultTableModel();

        tableModel.addColumn("ID");
        tableModel.addColumn("Product Name");
        tableModel.addColumn("Company Name");
        tableModel.addColumn("Date of Sale");
        tableModel.addColumn("Quantity");
        tableModel.addColumn("Amount");

        while (rs.next()) {
            int salesId = rs.getInt("id");
            String productName = rs.getString("product_name");
            String companyName = rs.getString("company_name");
            String dateOfSale = rs.getString("date_of_sale");
            int quantity = rs.getInt("quantity");
            double amount = rs.getDouble("amount");   

            Object[] row = {salesId, productName, companyName, dateOfSale, quantity, amount};
            tableModel.addRow(row);
        }
        medicineTable.setModel(tableModel);
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        delRecordBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicineTable = new javax.swing.JTable();
        searchTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        loggedInAsLbl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Medical Store Management System");
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        delRecordBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        delRecordBtn.setText("Delete Record");
        delRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delRecordBtnActionPerformed(evt);
            }
        });

        medicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        medicineTable.getTableHeader().setReorderingAllowed(false);
        medicineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicineTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(medicineTable);

        searchTxt.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        searchBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        loggedInAsLbl.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        loggedInAsLbl.setForeground(new java.awt.Color(153, 0, 0));
        loggedInAsLbl.setText("You're are logged in as :");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("You're are logged in as :");

        backBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(delRecordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(140, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(32, 32, 32)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(741, 741, 741)
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(loggedInAsLbl)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delRecordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(114, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(115, 115, 115)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(loggedInAsLbl))
                    .addGap(400, 400, 400)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(113, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void delRecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delRecordBtnActionPerformed
             if ("".equals(tableClicked)){
                    JOptionPane.showMessageDialog(null, "Please select a record to delete!");
             }else{
                 try{
                        int des = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?","Delete",JOptionPane.YES_NO_OPTION);
                        if (des==0){
                            try{
                                String sql = "DELETE FROM sales_record WHERE id='"+tableClicked+"'";
                                pst = conn.prepareStatement(sql);
                                pst.execute();
                                pst.close();
                                rs.close();
                                updateTable();
                                JOptionPane.showMessageDialog(null, "Record has been deleted!");
                             }catch(Exception e){
                                JOptionPane.showMessageDialog(null, e.getMessage());
                             }
                        }
                 }catch(Exception e){
                     JOptionPane.showMessageDialog(null, e);
                 }
             }
              
    }//GEN-LAST:event_delRecordBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        try{
        String search = searchTxt.getText().trim().toUpperCase();
                  
        String sql = "SELECT * FROM sales_record where product_name like '"+search+"%'";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();

        DefaultTableModel tableModel = new DefaultTableModel();

        tableModel.addColumn("ID");
        tableModel.addColumn("Product Name");
        tableModel.addColumn("Company Name");
        tableModel.addColumn("Date of Sale");
        tableModel.addColumn("Quantity");
        tableModel.addColumn("Amount");

        while (rs.next()) {
            int salesId = rs.getInt("id");
            String productName = rs.getString("product_name");
            String companyName = rs.getString("company_name");
            String dateOfSale = rs.getString("date_of_sale");
            int quantity = rs.getInt("quantity");
            double amount = rs.getDouble("amount");   

            Object[] row = {salesId, productName, companyName, dateOfSale, quantity, amount};
            tableModel.addRow(row);
        }
        medicineTable.setModel(tableModel);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        MainPanel mp = new MainPanel();
        close();
        mp.setVisible(true);
       
    }//GEN-LAST:event_backBtnActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
  
    }//GEN-LAST:event_formMouseClicked

    private void medicineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicineTableMouseClicked
         try{
           int row = medicineTable.getSelectedRow();
            tableClicked = (medicineTable.getModel().getValueAt(row,0).toString());
       }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
       }
         
    }//GEN-LAST:event_medicineTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        SalesRecord sr = new SalesRecord();
        sr.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton delRecordBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel loggedInAsLbl;
    private javax.swing.JTable medicineTable;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxt;
    // End of variables declaration//GEN-END:variables
}
